name: Build and Publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and publish'
        required: true
        default: 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add pybind11-stubgen dependency
          pip install pybind11==2.11.0 pybind11-global==2.11.0 wheel setuptools pybind11-stubgen
      
      - name: Configure CMake
        run: cmake -S . -B build -DPYBIND11_PYTHON_VERSION=${{ matrix.python-version }}
      
      - name: Build C++ Extension
        run: cmake --build build --config Release
      
      - name: Install C++ Extension into install/
        run: cmake --install build --prefix install

      # —— Generate Python stubs before packaging the wheel —— 
      - name: Generate Python Stubs (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          export DYLD_LIBRARY_PATH=$(pwd)/install/lib:$DYLD_LIBRARY_PATH
          export PYTHONPATH=$(pwd)/install/lib:$PYTHONPATH
          python -m pybind11_stubgen pyorbbecsdk \
            --output-dir=src/pyorbbecsdk --ignore-all-errors

      - name: Generate Python Stubs (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export LD_LIBRARY_PATH=$(pwd)/install/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$(pwd)/install/lib:$PYTHONPATH
          python -m pybind11_stubgen pyorbbecsdk \
            --output-dir=src/pyorbbecsdk --ignore-all-errors

      - name: Generate Python Stubs (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $root = (Get-Location).Path
          $env:PATH = "$root\install\lib;$env:PATH"
          $env:PYTHONPATH = "$root\install\lib;$env:PYTHONPATH"
          python -m pybind11_stubgen pyorbbecsdk `
            --output-dir=src\pyorbbecsdk --ignore-all-errors
      # ———————————————————————————————

      # —— Build source distribution instead of wheel —— 
      - name: Build source distribution
        run: python setup.py sdist

      - name: Upload source distribution
        uses: actions/upload-artifact@v4
        with:
          # 名称示例: python-sdist-1.2.3-ubuntu-latest
          name: python-sdist-${{ substring(github.event.inputs.tag, 1) }}-${{ matrix.os }}
          path: dist/*.tar.gz

  pypi-publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded

      - name: Prepare dist/ for PyPI
        run: |
          set -euxo pipefail
          mkdir -p dist
          mv downloaded/* dist/

      - name: Publish distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
