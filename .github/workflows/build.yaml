name: Build and Publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and publish'
        required: true
        default: '*'

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools pybind11==2.11.0 cibuildwheel pybind11-stubgen cmake

      - name: Build wheels via cibuildwheel
        env:
          # Linux 版本（使用 bash 语法）
          CIBW_BEFORE_BUILD_LINUX: |
            cmake -S . -B build -DPYBIND11_PYTHON_VERSION=${{ matrix.python-version }} &&
            cmake --build build --config Release &&
            cmake --install build --prefix install &&
            export LD_LIBRARY_PATH=$(pwd)/install/lib:$LD_LIBRARY_PATH &&
            export PYTHONPATH=$(pwd)/install/lib:$PYTHONPATH &&
            python -m pybind11_stubgen pyorbbecsdk --output-dir=src/pyorbbecsdk --ignore-all-errors
          
          # macOS 版本（与 Linux 类似，但有 DYLD_LIBRARY_PATH）
          CIBW_BEFORE_BUILD_MACOS: |
            cmake -S . -B build -DPYBIND11_PYTHON_VERSION=${{ matrix.python-version }} &&
            cmake --build build --config Release &&
            cmake --install build --prefix install &&
            export DYLD_LIBRARY_PATH=$(pwd)/install/lib:$DYLD_LIBRARY_PATH &&
            export PYTHONPATH=$(pwd)/install/lib:$PYTHONPATH &&
            python -m pybind11_stubgen pyorbbecsdk --output-dir=src/pyorbbecsdk --ignore-all-errors
          
          # Windows 版本（使用 cmd.exe 语法）
          CIBW_BEFORE_BUILD_WINDOWS: |
            cmake -S . -B build -DPYBIND11_PYTHON_VERSION=${{ matrix.python-version }} &&
            cmake --build build --config Release &&
            cmake --install build --prefix install &&
            set PYTHONPATH=%cd%\install\Lib;%PYTHONPATH% &&
            python -m pybind11_stubgen pyorbbecsdk --output-dir=src/pyorbbecsdk --ignore-all-errors
          
          # 通用配置
          CIBW_SKIP: "*-musllinux_*"
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install deps & build sdist
        run: |
          python -m pip install --upgrade pip setuptools wheel pybind11==2.11.0
          python setup.py sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: python-sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare dist/
        run: |
          mkdir -p dist
          mv artifacts/wheels-*/*.whl dist/
          mv artifacts/python-sdist/*.tar.gz dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1